#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 82 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 32
#"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 59 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 107 142 35 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 100 149 237 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 65 105 225 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 70 130 180 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 47 79 79 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 139 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 0 130 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 32 240 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 250 128 114 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 184 134 11 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 128 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 169 169 169 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 0 0 0 0 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 228 225 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 224 255 255 -1 -1
          0 6726 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Dependencies"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 6 #"srfi/1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 7 #"srfi/13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 7 #"srfi/48"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#|------------Racket MUD---------------|#"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#|                                     |#"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#| Author: SZABOLCS NAGY               |#"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#|                                     |#"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#| Contact: 21293260@student.uwl.ac.uk |#"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#|                                     |#"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 41 #"#|-------------------------------------|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|-------------------|#"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|  Data Structures  |#"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|-------------------|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; Object descriptions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"objects"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"the holy grail\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 2 #")("
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 2 #")("
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 2 #")("
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 2 #")("
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"N\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"a"
0 0 19 3 1 #" "
0 0 19 3 5 #"metal"
0 0 19 3 6 #" sword"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"holy"
0 0 19 3 6 #" cross"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"common"
0 0 19 3 6 #" gavel"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 2 #"24"
0 0 19 3 1 #" "
0 0 19 3 4 #"inch"
0 0 19 3 6 #" gauge"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"an"
0 0 19 3 17 #" interdimensional"
0 0 19 3 14 #" communicator\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 7 #" chisel"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 7 #" square"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"compasses"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 5 #"skull"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 11 #" crossbones"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"blue"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 5 #"white"
0 0 19 3 6 #" apron"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;Life available in the rooms to be picked up by the user"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"lives-in-the-room"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 4 #"\" 1 "
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"1"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"1"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #") ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;Monsters present in the rooms"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"monsters-in-the-room"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Rooms description"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"descriptions"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 6 #"lodge."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"King"
0 0 19 3 1 #" "
0 0 19 3 7 #"Solomon"
0 0 19 3 1 #"'"
0 0 19 3 1 #"s"
0 0 19 3 1 #" "
0 0 19 3 7 #"temple."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"temple."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 10 #"graveyard."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 6 #"mystic"
0 0 19 3 1 #" "
0 0 19 3 5 #"room."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"ancient"
0 0 19 3 1 #" "
0 0 19 3 5 #"ruins"
0 0 19 3 1 #" "
0 0 19 3 9 #"entrance."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"old"
0 0 19 3 1 #" "
0 0 19 3 5 #"great"
0 0 19 3 1 #" "
0 0 19 3 5 #"hall."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 10 #"Jerusalem."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"coffin."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"top"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 9 #"mountain."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"castle."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 6 #"river."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"north"
0 0 19 3 1 #" "
0 0 19 3 5 #"pole."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 3 #"2nd"
0 0 19 3 1 #" "
0 0 19 3 5 #"World"
0 0 19 3 1 #" "
0 0 19 3 3 #"War"
0 0 19 3 1 #" "
0 0 19 3 7 #"bunker."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 10 #"Buckingham"
0 0 19 3 1 #" "
0 0 19 3 7 #"Palace."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"Moon."
0 0 19 3 2 #" -"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Initialise the life database"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Initialise the monster database"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Initializes the object database"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Initializes the inventory database"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 120
(
 #";; Lists of pairs. First we have the user's entry and second we have"
 #" what our software should understand with that entry"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"look"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 10 #"directions"
0 0 24 3 2 #") "
0 0 14 3 4 #"look"
0 0 24 3 4 #") (("
0 0 14 3 4 #"look"
0 0 24 3 2 #") "
0 0 14 3 4 #"look"
0 0 24 3 4 #") (("
0 0 14 3 7 #"examine"
0 0 24 3 1 #" "
0 0 14 3 4 #"room"
0 0 24 3 2 #") "
0 0 14 3 4 #"look"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"pick"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"get"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 4 #") (("
0 0 14 3 6 #"pickup"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 4 #") (("
0 0 14 3 4 #"pick"
0 0 24 3 2 #") "
0 0 14 3 4 #"pick"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"add"
0 0 24 3 2 #") "
0 0 14 3 3 #"add"
0 0 24 3 4 #") (("
0 0 14 3 6 #"health"
0 0 24 3 2 #") "
0 0 14 3 3 #"add"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"put"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 4 #"drop"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 5 #"place"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 4 #") (("
0 0 14 3 6 #"remove"
0 0 24 3 2 #") "
0 0 14 3 4 #"drop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 9 #"inventory"
0 0 24 3 2 #") "
0 0 14 3 9 #"inventory"
0 0 24 3 4 #") (("
0 0 14 3 3 #"bag"
0 0 24 3 2 #") "
0 0 14 3 9 #"inventory"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 5 #"lives"
0 0 24 3 2 #") "
0 0 14 3 5 #"lives"
0 0 24 3 4 #") (("
0 0 14 3 4 #"life"
0 0 24 3 2 #") "
0 0 14 3 5 #"lives"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"help"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 4 #"help"
0 0 24 3 2 #") "
0 0 14 3 4 #"help"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 4 #"show"
0 0 24 3 2 #") "
0 0 14 3 4 #"show"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"kill"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 4 #"kill"
0 0 24 3 2 #") "
0 0 14 3 4 #"kill"
0 0 24 3 4 #") (("
0 0 14 3 5 #"fight"
0 0 24 3 2 #") "
0 0 14 3 4 #"kill"
0 0 24 3 4 #") (("
0 0 14 3 3 #"hit"
0 0 24 3 2 #") "
0 0 14 3 4 #"kill"
0 0 24 3 4 #") (("
0 0 14 3 4 #"kick"
0 0 24 3 2 #") "
0 0 14 3 4 #"kill"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"monsters"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 8 #"monsters"
0 0 24 3 2 #") "
0 0 14 3 8 #"monsters"
0 0 24 3 4 #") (("
0 0 14 3 7 #"monster"
0 0 24 3 2 #") "
0 0 14 3 8 #"monsters"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"quit"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 4 #"game"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 4 #"quit"
0 0 24 3 1 #" "
0 0 14 3 4 #"game"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 4 #"exit"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 4 #") (("
0 0 14 3 4 #"quit"
0 0 24 3 2 #") "
0 0 14 3 4 #"quit"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; Lists using unquote-splicing to dynamically reference all the oth"
 #"er lists"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"actions"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 2 #",@"
0 0 14 3 4 #"look"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"pick"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 9 #"inventory"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"help"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"quit"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"show"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 3 #"add"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 8 #"monsters"
0 0 24 3 1 #" "
0 0 28 3 2 #",@"
0 0 14 3 4 #"kill"
0 0 24 3 4 #"  ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 21 3 1 #"1"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 4 #") (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"2"
0 0 24 3 3 #" (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"3"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 5 #" ) (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"4"
0 0 24 3 3 #" (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"5"
0 0 24 3 3 #" (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"6"
0 0 24 3 3 #" (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #") (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"7"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"8"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 1 #"9"
0 0 24 3 3 #" (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"10"
0 0 24 3 3 #" (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"11"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"12"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"13"
0 0 24 3 3 #" (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 4 #") (("
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 4 #") (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"east"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"14"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"15"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 4 #") (("
0 0 14 3 5 #"south"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 21 3 2 #"16"
0 0 24 3 3 #" (("
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 4 #") (("
0 0 14 3 5 #"north"
0 0 24 3 1 #" "
0 0 14 3 4 #"west"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 28 3 2 #",@"
0 0 14 3 7 #"actions"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|-------------------|#"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|     Functions     |#"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|-------------------|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 186
(
 #";;The following function is used to identify the name of the locatio"
 #"n, this is done by passing the location id. This will also show what"
 #" objents we have on the ground in the current room"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~a\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 12 #"descriptions"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 67
#";; The following describes the objects that are present in the room"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 81
(
 #";; The following describes if there is life in the room that the use"
 #"r can pick up"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 68
#";; The following describes if there are monsters present in the room"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 94
(
 #";; The following prints greater then sign, the role of this is to pr"
 #"ompt the user for an entry"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 2 #"> "
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;Initialise the health of the user, set it to null"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"health"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 111
(
 #";;  The following function displays the life that is available to be"
 #" collected in the room and in the inventory"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 82
(
 #";;The following checks if key (id) has something stored in db, if so"
 #", then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 122
(
 #";;Then following records the content of the key id inside the db has"
 #"h table, gets previous items assigned to a room or bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 75
(
 #";;The following formats the output, creates a list of the items in t"
 #"he room"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"output"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"  "
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 94
(
 #";;The following shows lives and on the ground. Adds treatment to cas"
 #"es where the room is empty"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"S"
0 0 19 3 1 #"\""
0 0 24 3 4 #")) ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 4 #"area"
0 0 19 3 1 #" "
0 0 19 3 7 #"appears"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"safe"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 8 #"Monsters"
0 0 19 3 1 #" "
0 0 19 3 7 #"around!"
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 7 #"BEWARE!"
0 0 19 3 1 #" "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"THERE"
0 0 19 3 1 #"'"
0 0 19 3 1 #"S"
0 0 19 3 1 #" "
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 7 #"MONSTER"
0 0 19 3 1 #" "
0 0 19 3 5 #"RIGHT"
0 0 19 3 1 #" "
0 0 19 3 2 #"IN"
0 0 19 3 1 #" "
0 0 19 3 5 #"FRONT"
0 0 19 3 1 #" "
0 0 19 3 2 #"OF"
0 0 19 3 1 #" "
0 0 19 3 4 #"YOU!"
0 0 19 3 1 #" "
0 0 19 3 3 #"-\\n"
0 0 19 29 1 #"\n"
0 0 19 3 65
#"                                                                ("
0 0 19 3 9 #"remember:"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 4 #"only"
0 0 19 3 1 #" "
0 0 19 3 5 #"fight"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"weapon!"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 64
#"                                                                "
0 0 19 3 2 #"If"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"don"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 5 #"fight"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 5 #"leave"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"area"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 64
#"                                                                "
0 0 19 3 5 #"loose"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 6 #"health"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 3 #"hit"
0 0 19 3 1 #" "
0 0 19 3 4 #"you!"
0 0 19 3 5 #")\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #"("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"NO"
0 0 19 3 1 #"\""
0 0 24 3 6 #") )  ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 2 #"No"
0 0 19 3 1 #" "
0 0 19 3 6 #"health"
0 0 19 3 1 #" "
0 0 19 3 8 #"availabe"
0 0 19 3 1 #" "
0 0 19 3 4 #"here"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 6 #")) ) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 4 #"YOUR"
0 0 19 3 1 #" "
0 0 19 3 7 #"HEALTH:"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 3 #" \\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"E"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 4 #"Your"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 5 #"empty"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"E"
0 0 19 3 1 #"\""
0 0 24 3 4 #")) ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 4 #"Your"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 5 #"empty"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"N"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"There"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 6 #"weapon"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"floor"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"this"
0 0 19 3 1 #" "
0 0 19 3 4 #"area"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 4 #")) ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 8 #"carrying"
0 0 19 3 6 #" ~a.\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"1"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 4 #"pick"
0 0 19 3 1 #" "
0 0 19 3 3 #"up!"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #"  "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"E"
0 0 19 3 1 #"\""
0 0 24 3 4 #")) ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"floor"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"\\n"
0 0 19 3 5 #"     "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 4 #"pick"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 2 #"up"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"add"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 5 #"bag\\n"
0 0 19 3 5 #"     "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 5 #"later"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 5 #"might"
0 0 19 3 1 #" "
0 0 19 3 4 #"need"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 5 #"fight"
0 0 19 3 1 #" "
0 0 19 3 9 #"Monsters."
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"        ))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 105
(
 #";;The following function retrieves the cdr of the first pair in assq"
 #"list where the car is equal the to id"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"assqlist"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 8 #"assqlist"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;The following function identifies the items related to the room"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 87
(
 #";;The following assigns to record a list with the possible actions f"
 #"or the current room"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assv-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 78
(
 #";;The following assigns to keylist a list with the valid keywords fo"
 #"r the game"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"keylist"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-keywords"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 187
(
 #";;The following calls list-of-lengths, By doing this creates a list "
 #"of lengths with the most probable commands and then decide which one"
 #" is the most probable using index-of-largest-number"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"index"
0 0 24 3 2 #" ("
0 0 14 3 23 #"index-of-largest-number"
0 0 24 3 2 #" ("
0 0 14 3 15 #"list-of-lengths"
0 0 24 3 1 #" "
0 0 14 3 7 #"keylist"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 230
(
 #";;The following checks if there is an index, this is to prevent erro"
 #"rs, and retrieves the command that is present in that index inside t"
 #"he list record, which contains the valid actions for the current roo"
 #"m. Otherwise returns false"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";;The following function does the same as assq-ref but uses eqv? for"
 #" comparison instead of eq?"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assv-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"assqlist"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assv"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 8 #"assqlist"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;The following function retrieves the valid keywords for the game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-keywords"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 86
(
 #";;The following assigns to keys, a list with the possible actions fo"
 #"r the current room"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"keys"
0 0 24 3 2 #" ("
0 0 14 3 8 #"assq-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 68
#";;The following returns the accepted keywords, but not their actions"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #")) "
0 0 14 3 4 #"keys"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 130
(
 #";;The following function returns a list of lengths that shows the mo"
 #"st probable commands given by the user. e.g. (0 0 0 3 0 0 0 0)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"list-of-lengths"
0 0 24 3 1 #" "
0 0 14 3 7 #"keylist"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 95
(
 #";;The following returns the intersection between the tokens list(com"
 #"mand given) and the keyword"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lset-intersection"
0 0 24 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 161
(
 #";;The following checks if there is an intersection between the lists"
 #", if there is, the length of set will not be zero, and thus, the res"
 #"ult will have some weight"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"keylist"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;The following function returns the most probable input command"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"index-of-largest-number"
0 0 24 3 1 #" "
0 0 14 3 15 #"list-of-numbers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 98
(
 #";;The following sorts the list of lengths in descending order and ge"
 #"ts the first element(greatest)"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 15 #"list-of-numbers"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 88
(
 #";;The following checks if the list is not empty, returns #f if the g"
 #"reatest element is 0"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 125
(
 #";;The following returns the index of the entry with the greatest wei"
 #"ght, so it can be matched with the list of keywords later"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"list-index"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")) "
0 0 14 3 15 #"list-of-numbers"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;The following function retrieve what directions you see from the r"
 #"oom you are"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"get-directions"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 62
#";;The following describes objects that are present in the room"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 71
(
 #";;The following describes the life  that is present in the room, if "
 #"any"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 75
(
 #";;The following describes if there are monsters present in the room,"
 #" if any"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 107
(
 #";;The following finds the pair that has car equals to id in the deci"
 #"siontable list, and assign it to record"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 13 #"decisiontable"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 183
(
 #";;The following filters through record and if the second value of it"
 #" is a number, then that is a room, and it is assigned to result. Als"
 #"o gets the length of n, the rooms you can go to"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 74
(
 #";;The following is a conditional case used to finally check the dire"
 #"ctions"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 77
(
 #";;The following informs that in the current room no directions were "
 #"retrieved"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 6 #"appear"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 7 #"entered"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"room"
0 0 19 3 1 #" "
0 0 19 3 4 #"with"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 5 #"exits"
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 84
(
 #";;The following extracts the directions from result using our slist-"
 #">string function"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 4 #"exit"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"slist->string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 171
(
 #";;In the following the first line(losym) in let* remove the indexes("
 #"numbers) from the directions. The second line (lostr) transforms the"
 #" list in a lat with the directions."
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"losym"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"lostr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 13 #"slist->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 5 #"losym"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 91
(
 #";;Thee following takes the atoms from lostr and transform them into "
 #"a string separated by \""
) 0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 2 #" \""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 5 #"exits"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 5 #"lostr"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 4 #"and "
0 0 19 3 1 #"\""
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";;The following function maps the parameter to a list of atoms and t"
 #"hen joins it in a string with separator \""
) 0 0 17 3 3 #" \" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"slist->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;The following function is for picking up objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pick-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 85
(
 #";;The following removes the command from the input, getting only the"
 #" name of the item"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"remove-E"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 23 #"remove-object-from-room"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";;The following function removes object from the room and add to you"
 #"r bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"remove-m"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 86
(
 #";;The following checks if key (id) has something stored in db, if it"
 #" does then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 125
(
 #";;The following assigns to record the content of the key id inside t"
 #"he db hash table (gets previous items assigned to a room)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 136
(
 #";;The following removes the occurrence of the item, based on the suf"
 #"ix, which is the most probable user input e.g. dagger, from the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))  "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 67
#";;The following returns the items that record have and result don't"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 4 #"Well"
0 0 19 3 1 #" "
0 0 19 3 4 #"done"
0 0 19 3 1 #" "
0 0 19 3 6 #"Sir!\\n"
0 0 19 3 5 #"     "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 8 #"defeated"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 15 #" Monster!\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"This"
0 0 19 3 1 #" "
0 0 19 3 4 #"area"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 4 #"safe"
0 0 19 3 1 #" "
0 0 19 3 4 #"Sir!"
0 0 19 3 1 #" "
0 0 19 3 5 #"There"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 8 #"Monsters"
0 0 19 3 12 #" here!\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"            )))))"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";;The following function removes object from the room and add to you"
 #"r bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"remove-object-from-room"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 86
(
 #";;The following checks if key (id) has something stored in db, if it"
 #" does then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 125
(
 #";;The following assigns to record the content of the key id inside t"
 #"he db hash table (gets previous items assigned to a room)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 136
(
 #";;The following removes the occurrence of the item, based on the suf"
 #"ix, which is the most probable user input e.g. dagger, from the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 67
#";;The following returns the items that record have and result don't"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 2 #"\"N"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"There"
0 0 19 3 1 #" "
0 0 19 3 4 #"aren"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 3 #"any"
0 0 19 3 1 #" "
0 0 19 3 11 #"collectable"
0 0 19 3 1 #" "
0 0 19 3 7 #"weapons"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"this"
0 0 19 3 1 #" "
0 0 19 3 4 #"area"
0 0 19 3 1 #" "
0 0 19 3 4 #"Sir!"
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"            ( ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 58
#";; If item is null(item is not in the room), reports error"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"There"
0 0 19 3 1 #"'"
0 0 19 3 1 #"s"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 4 #"more"
0 0 19 3 1 #" "
0 0 19 3 9 #"available"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"this"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"this"
0 0 19 3 1 #" "
0 0 19 3 3 #"Sir"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 6 #"picked"
0 0 19 3 1 #" "
0 0 19 3 4 #"them"
0 0 19 3 1 #" "
0 0 19 3 3 #"all"
0 0 19 3 1 #" "
0 0 19 3 3 #"up!"
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 4 #")) ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             (("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 2 #")("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 2 #"\"N"
0 0 19 3 1 #"\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"Added"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 4 #"bag."
0 0 19 3 8 #" -\\n\\n\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 27 #";; Adds item to inventorydb"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 102
(
 #";; Checks if the item interacted with is the interdimensional commun"
 #"icator. If it is, the game is over"
) 0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 2 #"an"
0 0 19 3 17 #" interdimensional"
0 0 19 3 14 #" communicator\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 31 #";; Shows message and exits game"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 9 #"Something"
0 0 19 3 1 #" "
0 0 19 3 7 #"strange"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 17 #"happening...\\nYOU"
0 0 19 3 1 #" "
0 0 19 3 4 #"HAVE"
0 0 19 3 1 #" "
0 0 19 3 5 #"FOUND"
0 0 19 3 1 #" "
0 0 19 3 3 #"THE"
0 0 19 3 1 #" "
0 0 19 3 3 #"WAY"
0 0 19 3 1 #" "
0 0 19 3 2 #"TO"
0 0 19 3 1 #" "
0 0 19 3 8 #"FREEDOM!"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"exit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 33 #";; Removes item from the ground  "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;The following function is for picking up life "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 85
(
 #";;The following removes the command from the input, getting only the"
 #" name of the item"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 6 #" )))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 21 #"remove-life-from-room"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 8 #"add-life"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 169
(
 #";;The following function is called when user goes from one room to t"
 #"he other. What it does is it checks if there is a Monster in the roo"
 #"m that the user is about to exit,"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 111
(
 #";;meaning that the user leaves the room without killing the Monster,"
 #" if so, then calls the remove-life function"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"monster-hit"
0 0 24 3 2 #"  "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 3 #")  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 82
(
 #";;The following checks if key (id) has something stored in db, if so"
 #", then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 122
(
 #";;Then following records the content of the key id inside the db has"
 #"h table, gets previous items assigned to a room or bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 75
(
 #";;The following formats the output, creates a list of the items in t"
 #"he room"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"output"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 85
(
 #";;The following checks if there is a Monster in the room when we are"
 #" leaving the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 2 #"\"M"
0 0 19 3 1 #"\""
0 0 24 3 4 #")) ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"heath"
0 0 24 3 1 #"("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 86
(
 #";;The foillowing checks if key (id) has something stored in db, if i"
 #"t has then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 4 #") ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 89
(
 #";;The following line assigns to record the content of the key id ins"
 #"ide the db hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 47 #";; The following notifies the user of life loss"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 3 #"hit"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"lost"
0 0 19 3 2 #"  "
0 0 19 3 5 #"life!"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 32 #";; Sets the new result as 'lives"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 44 #";;The following shows message and exits game"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 2 #"OH"
0 0 19 3 1 #" "
0 0 19 3 3 #"NO!"
0 0 19 3 1 #" "
0 0 19 3 3 #"THE"
0 0 19 3 1 #" "
0 0 19 3 7 #"MONSTER"
0 0 19 3 1 #" "
0 0 19 3 6 #"KILLED"
0 0 19 3 1 #" "
0 0 19 3 4 #"YOU!"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"exit"
0 0 24 3 12 #"))))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;The following function removes life from the room and adds it to h"
 #"ealth ('lives)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"remove-life-from-room"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 86
(
 #";;The following checks if key (id) has something stored in db, if it"
 #" does then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 125
(
 #";;The following assigns to record the content of the key id inside t"
 #"he db hash table (gets previous items assigned to a room)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 136
(
 #";;The following removes the occurrence of the item, based on the suf"
 #"ix, which is the most probable user input e.g. dagger, from the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 67
#";;The following returns the items that record have and result don't"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"st"
0 0 24 3 1 #"("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"        (  ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"st"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"z"
0 0 19 3 1 #"\""
0 0 24 3 5 #"  )  "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 113
(
 #";;The following checks if item is null, if it is null, meaning that "
 #"the item is not in the room, it reports error"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"There"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"pick"
0 0 19 3 1 #" "
0 0 19 3 3 #"up!"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"st"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 2 #"1 "
0 0 19 3 1 #"\""
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 5 #"added"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 9 #" health\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"add-life"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 2 #"1 "
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"              ))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 145
(
 #";;The following function checks if the user has a weapon in bag to k"
 #"ill the monster. Error handling for when the user has not got a weap"
 #"on in bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"weapon"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 82
(
 #";;The following checks if key (id) has something stored in db, if so"
 #", then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 122
(
 #";;Then following records the content of the key id inside the db has"
 #"h table, gets previous items assigned to a room or bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 75
(
 #";;The following formats the output, creates a list of the items in t"
 #"he room"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"          ( "
0 0 14 3 6 #"output"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 6 #" ))  )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 109
(
 #";;The following checks if the user ha s any weapon in the bag. Adds "
 #"treatment to cases where the bag is empty"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 37 #";;If bag is empty or has the letter \""
0 0 17 3 8 #"E\" in it"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"E"
0 0 19 3 1 #"\""
0 0 24 3 5 #" )  ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 87
(
 #";;The following message gets printed to notify the user of not havin"
 #"g weapon in the bag"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ( "
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 1 #"I"
0 0 19 3 1 #"'"
0 0 19 3 1 #"m"
0 0 19 3 1 #" "
0 0 19 3 6 #"afraid"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"don"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 6 #"weapon"
0 0 19 3 1 #" "
0 0 19 3 4 #"Sir!"
0 0 19 3 4 #" -\\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 93
(
 #";; The following calls the remove-m function, giving parameters: mon"
 #"sterdb, id and input     "
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 5 #"using"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 6 #"weapon"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 5 #"fight"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"monster"
0 0 19 3 1 #" "
0 0 19 3 5 #"-\\n\\n"
0 0 19 3 5 #"     "
0 0 19 3 15 #"***************"
0 0 19 3 39 #")))))|||||||(((((*****************\\n\\n\""
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 108
(
 #";;The following line calls the remove-life function if there is a Mo"
 #"nster in the room when we leave the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"remove-m"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #") ("
0 0 14 3 8 #"remove-w"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"remove-w"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";;The following function checks if key (id) has something stored in "
 #"db, if it has then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 89
(
 #";;The following line assigns to record the content of the key id ins"
 #"ide the db hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 114
(
 #";;The following line removes the occurrence of the item, based on th"
 #"e sufix, which is the most probable user input"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 72
(
 #";;The following line returns the items that record have and result d"
 #"on't"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             (("
0 0 14 3 2 #"or"
0 0 24 3 1 #"("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"())) ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"E\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 45 #"\"   - You used ~a to defeat the Monster! -\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"remove-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";;The following function checks if key (id) has something stored in "
 #"db, if it has then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 89
(
 #";;The following line assigns to record the content of the key id ins"
 #"ide the db hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 114
(
 #";;The following line removes the occurrence of the item, based on th"
 #"e sufix, which is the most probable user input"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 72
(
 #";;The following line returns the items that record have and result d"
 #"on't"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 47 #"\"   - You don't have any more weapons Sir! -\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             (("
0 0 14 3 2 #"or"
0 0 24 3 1 #"("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"())) ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"E\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 45 #"\"   - You used ~a to defeat the Monster! -\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";The following function is for dropping objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"drop-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 85
(
 #";;The following removes the command from the input, getting only the"
 #" name of the item"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 28 #"remove-object-from-inventory"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";The following function is for dropping objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"drop-life"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 85
(
 #";;The following removes the command from the input, getting only the"
 #" name of the item"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"remove-life"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"1\""
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;The following function removes object from database and add it to "
 #"the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"remove-E"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 86
(
 #";;The foillowing checks if key (id) has something stored in db, if i"
 #"t has then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 89
(
 #";;The following line assigns to record the content of the key id ins"
 #"ide the db hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 114
(
 #";;The following line removes the occurrence of the item, based on th"
 #"e sufix, which is the most probable user input"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 72
(
 #";;The following line returns the items that record have and result d"
 #"on't"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;The following function removes object from database and add it to "
 #"the room"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"remove-life"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 86
(
 #";;The foillowing checks if key (id) has something stored in db, if i"
 #"t has then proceed"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 89
(
 #";;The following line assigns to record the content of the key id ins"
 #"ide the db hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 114
(
 #";;The following line removes the occurrence of the item, based on th"
 #"e sufix, which is the most probable user input"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 72
(
 #";;The following line returns the items that record have and result d"
 #"on't"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 47 #";; The following notifies the user of life loss"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 46 #"- The Monster hit you and you lost  life! -\\n\""
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 32 #";; Sets the new result as 'lives"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 44 #";;The following shows message and exits game"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 41 #"\"   - OH NO! THE MONSTER KILLED YOU! -\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"exit"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      )))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Remove object from your bag and add it to the room"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"remove-object-from-inventory"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; When key(id) has something stored in db, proceed"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 17 #"string-suffix-ci?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lset-difference"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 35 #"\"You are not carrying that item!\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"Removed ~a from your bag.\\n\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;The following function displays the content of users bag in the in"
 #"ventory"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"display-inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 146
(
 #";; The following function displays the lives the user has got. Each "
 #"life is displayed with the number 1 eg. 1 1 means 2 lifes; 1 1 1 mea"
 #"ns 3 lifes"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-lives"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"display-objects"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; The next function shows the map of the maze to the user"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-show"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 29 #"+------+------+------+------+"
0 0 19 29 1 #"\n"
0 0 19 3 93
(
 #"                                                                    "
 #"                        |"
) 0 0 19 3 6 #"      "
0 0 19 3 8 #"|  M   |"
0 0 19 3 6 #"      "
0 0 19 3 8 #"|      |"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 8 #"| 9    |"
0 0 19 3 1 #" "
0 0 19 3 1 #"6"
0 0 19 3 4 #"    "
0 0 19 3 8 #"| 5    |"
0 0 19 3 1 #" "
0 0 19 3 2 #"14"
0 0 19 3 3 #"   "
0 0 19 3 1 #"|"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 29 #"+------+------+------+------+"
0 0 19 29 1 #"\n"
0 0 19 3 93
(
 #"                                                                    "
 #"                        |"
) 0 0 19 3 3 #"   "
0 0 19 3 1 #"M"
0 0 19 3 2 #"  "
0 0 19 3 8 #"|  M   |"
0 0 19 3 3 #"   "
0 0 19 3 1 #"M"
0 0 19 3 2 #"  "
0 0 19 3 8 #"|   M  |"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 8 #"| 4    |"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 4 #"    "
0 0 19 3 8 #"| 7    |"
0 0 19 3 1 #" "
0 0 19 3 1 #"8"
0 0 19 3 4 #"    "
0 0 19 3 1 #"|"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 29 #"+------+------+------+------+"
0 0 19 29 1 #"\n"
0 0 19 3 93
(
 #"                                                                    "
 #"                        |"
) 0 0 19 3 4 #"    "
0 0 19 3 1 #"M"
0 0 19 3 1 #" "
0 0 19 3 8 #"|  M   |"
0 0 19 3 3 #"   "
0 0 19 3 1 #"M"
0 0 19 3 2 #"  "
0 0 19 3 8 #"|   M  |"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 8 #"| 10   |"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 4 #"    "
0 0 19 3 8 #"| 12   |"
0 0 19 3 1 #" "
0 0 19 3 2 #"15"
0 0 19 3 3 #"   "
0 0 19 3 1 #"|"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 29 #"+------+------+------+------+"
0 0 19 29 1 #"\n"
0 0 19 3 93
(
 #"                                                                    "
 #"                        |"
) 0 0 19 3 6 #"      "
0 0 19 3 8 #"|      |"
0 0 19 3 6 #"      "
0 0 19 3 8 #"|      |"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 8 #"| 11   |"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 4 #"    "
0 0 19 3 8 #"| 13   |"
0 0 19 3 1 #" "
0 0 19 3 2 #"16"
0 0 19 3 3 #"   "
0 0 19 3 1 #"|"
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 3 29 #"+------+------+------+------+"
0 0 19 29 1 #"\n"
0 0 19 3 101
(
 #"                                                                    "
 #"                                 "
) 0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 3 99
(
 #"                                                                    "
 #"                               "
) 0 0 19 3 5 #"START"
0 0 19 3 1 #" "
0 0 19 3 6 #"POINT:"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 29 1 #"\n"
0 0 19 3 96
(
 #"                                                                    "
 #"                            "
) 0 0 19 3 2 #"M:"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"room"
0 0 19 29 1 #"\n"
0 0 19 3 37 #"                                     "
0 0 19 29 1 #"\n"
0 0 19 3 92
(
 #"                                                                    "
 #"                        "
) 0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 3 1 #"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;The following function prints the help text on the screen"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"\\n"
0 0 19 3 1 #" "
0 0 19 3 4 #"HELP"
0 0 19 3 1 #" "
0 0 19 3 2 #"\\n"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 19 29 1 #"\n"
0 0 19 3 21 #"               |||---"
0 0 19 3 7 #"       "
0 0 19 3 2 #"M."
0 0 19 3 7 #"       "
0 0 19 3 2 #"U."
0 0 19 3 6 #"      "
0 0 19 3 2 #"D."
0 0 19 3 5 #"     "
0 0 19 3 6 #"---|||"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 3 20 #"                    "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 5 #"Multi"
0 0 19 3 1 #" "
0 0 19 3 4 #"User"
0 0 19 3 1 #" "
0 0 19 3 7 #"Dungeon"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 6 #"racket"
0 0 19 3 1 #" "
0 0 19 3 3 #"-\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"*"
0 0 19 3 1 #" "
0 0 19 3 4 #"GAME"
0 0 19 3 1 #" "
0 0 19 3 9 #"OBJECTIVE"
0 0 19 3 1 #" "
0 0 19 3 1 #"*"
0 0 19 3 1 #" "
0 0 19 3 2 #"\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 4 #"game"
0 0 19 3 1 #" "
0 0 19 3 9 #"objective"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 8 #"activate"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"nether"
0 0 19 3 1 #" "
0 0 19 3 6 #"portal"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 6 #"escape"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"maze."
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 2 #"To"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 4 #"able"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"open"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"portal"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"must"
0 0 19 3 1 #" "
0 0 19 3 4 #"find"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 17 #" Interdimensional"
0 0 19 3 1 #" "
0 0 19 3 19 #"Communicator in one"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"maze"
0 0 19 3 1 #" "
0 0 19 3 6 #"rooms."
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 5 #"start"
0 0 19 3 1 #" "
0 0 19 3 3 #"off"
0 0 19 3 1 #" "
0 0 19 3 4 #"with"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"but"
0 0 19 3 1 #" "
0 0 19 3 3 #"cou"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 7 #"collect"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"add"
0 0 19 3 1 #" "
0 0 19 3 4 #"more"
0 0 19 3 1 #" "
0 0 19 3 5 #"lifes"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 8 #" health "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"some"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"rooms"
0 0 19 3 1 #" "
0 0 19 3 5 #"where"
0 0 19 3 1 #" "
0 0 19 3 5 #"there"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 11 #"collectable"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 10 #"available."
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 5 #"While"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 6 #"trying"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"find"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 16 #"Interdimensional"
0 0 19 3 1 #" "
0 0 19 3 12 #"Communicator"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 7 #"through"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 7 #"freedom"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 4 #"meet"
0 0 19 3 1 #" "
0 0 19 3 8 #"monsters"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"various"
0 0 19 3 1 #" "
0 0 19 3 9 #"locations"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"vill"
0 0 19 3 1 #" "
0 0 19 3 5 #"visit"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 4 #"also"
0 0 19 3 1 #" "
0 0 19 3 7 #"collect"
0 0 19 3 1 #" "
0 0 19 3 7 #"objects"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 5 #"rooms"
0 0 19 3 1 #" "
0 0 19 3 5 #"where"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 11 #"collectable"
0 0 19 3 1 #" "
0 0 19 3 7 #"objects"
0 0 19 3 1 #" "
0 0 19 3 9 #"available"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 3 #"use"
0 0 19 3 1 #" "
0 0 19 3 5 #"these"
0 0 19 3 1 #" "
0 0 19 3 7 #"objects"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 4 #"kill"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"Monsters."
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 3 #"But"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 8 #"careful!"
0 0 19 3 1 #" "
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 4 #"only"
0 0 19 3 1 #" "
0 0 19 3 6 #"defeat"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 13 #"weapon/object"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"don"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 3 #"any"
0 0 19 3 1 #" "
0 0 19 3 6 #"weapon"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 5 #"enter"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 8 #"location"
0 0 19 3 1 #" "
0 0 19 3 5 #"where"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 4 #"then"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 4 #"take"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 8 #" health "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 8 #"leanving"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"room."
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 2 #"As"
0 0 19 3 1 #" "
0 0 19 3 4 #"soon"
0 0 19 3 1 #" "
0 0 19 3 2 #"as"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 5 #"loose"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"last"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 8 #" health,"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 7 #"message"
0 0 19 3 1 #" "
0 0 19 3 9 #"informing"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #" "
0 0 19 3 6 #"killed"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"game"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 10 #"terminate."
0 0 19 3 1 #" "
0 0 19 3 2 #"\\n"
0 0 19 29 1 #"\n"
0 0 19 3 9 #"         "
0 0 19 3 1 #"*"
0 0 19 3 1 #" "
0 0 19 3 5 #"VALID"
0 0 19 3 1 #" "
0 0 19 3 8 #"COMMANDS"
0 0 19 3 1 #" "
0 0 19 3 3 #"*\\n"
0 0 19 29 1 #"\n"
0 0 19 3 19 #"          - (look |"
0 0 19 3 1 #" "
0 0 19 3 10 #"directions"
0 0 19 3 1 #" "
0 0 19 3 1 #"|"
0 0 19 3 1 #" "
0 0 19 3 7 #"examine"
0 0 19 3 1 #" "
0 0 19 3 4 #"room"
0 0 19 3 1 #")"
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 8 #"Retrieve"
0 0 19 3 1 #" "
0 0 19 3 11 #"information"
0 0 19 3 1 #" "
0 0 19 3 5 #"about"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"current"
0 0 19 3 1 #" "
0 0 19 3 7 #"room.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 19 #"          - (pick |"
0 0 19 3 1 #" "
0 0 19 3 3 #"get"
0 0 19 3 1 #" "
0 0 19 3 1 #"|"
0 0 19 3 1 #" "
0 0 19 3 6 #"pickup"
0 0 19 3 2 #") "
0 0 19 3 11 #"<item-name>"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 4 #"Your"
0 0 19 3 1 #" "
0 0 19 3 9 #"character"
0 0 19 3 1 #" "
0 0 19 3 4 #"pick"
0 0 19 3 1 #" "
0 0 19 3 2 #"up"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 13 #"correspondent"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 12 #"<item-name>."
0 0 19 3 1 #" "
0 0 19 3 2 #"If"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 11 #"<item-name>"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 8 #"supplied"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 5 #"picks"
0 0 19 3 1 #" "
0 0 19 3 2 #"up"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"first"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"rooms"
0 0 19 3 1 #" "
0 0 19 3 7 #"list.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 19 #"          - (drop |"
0 0 19 3 1 #" "
0 0 19 3 3 #"put"
0 0 19 3 1 #" "
0 0 19 3 9 #"| place |"
0 0 19 3 1 #" "
0 0 19 3 6 #"remove"
0 0 19 3 2 #") "
0 0 19 3 11 #"<item-name>"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 4 #"Your"
0 0 19 3 1 #" "
0 0 19 3 9 #"character"
0 0 19 3 1 #" "
0 0 19 3 6 #"throws"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 13 #"correspondent"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 11 #"<item-name>"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"ground."
0 0 19 3 1 #" "
0 0 19 3 2 #"If"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 11 #"<item-name>"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 8 #"supplied"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 5 #"drops"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"first"
0 0 19 3 1 #" "
0 0 19 3 4 #"item"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 10 #"inventory."
0 0 19 3 1 #" "
0 0 19 3 2 #"\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 9 #"inventory"
0 0 19 3 1 #" "
0 0 19 3 1 #"|"
0 0 19 3 1 #" "
0 0 19 3 3 #"bag"
0 0 19 3 2 #") "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 5 #"Shows"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 4 #"list"
0 0 19 3 1 #" "
0 0 19 3 8 #"composed"
0 0 19 3 1 #" "
0 0 19 3 2 #"by"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"items"
0 0 19 3 1 #" "
0 0 19 3 7 #"present"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 9 #"inventory"
0 0 19 3 1 #" "
0 0 19 3 2 #"at"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"time.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 4 #"kill"
0 0 19 3 2 #") "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 4 #"Kill"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 7 #"Monster"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 5 #"there"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"area\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 3 #"add"
0 0 19 3 2 #") "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 5 #"picks"
0 0 19 3 1 #" "
0 0 19 3 2 #"up"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"room"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 5 #"there"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 4 #"adds"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 9 #" health\\n"
0 0 19 29 1 #"\n"
0 0 19 3 20 #"          - (lives |"
0 0 19 3 1 #" "
0 0 19 3 4 #"life"
0 0 19 3 2 #") "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 9 #"Retrieves"
0 0 19 3 1 #" "
0 0 19 3 11 #"information"
0 0 19 3 1 #" "
0 0 19 3 5 #"about"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"nomber"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 5 #"lifes"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 7 #"health."
0 0 19 3 1 #" "
0 0 19 3 4 #"Each"
0 0 19 3 1 #" "
0 0 19 3 6 #"health"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 11 #"represented"
0 0 19 3 1 #" "
0 0 19 3 2 #"by"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"number"
0 0 19 3 1 #" "
0 0 19 3 3 #"'1'"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"eg."
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 5 #"means"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 8 #"lifes.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 4 #"help"
0 0 19 3 2 #") "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 5 #"Shows"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"help"
0 0 19 3 1 #" "
0 0 19 3 4 #"file"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 6 #"Racket"
0 0 19 3 1 #" "
0 0 19 3 6 #"MUD.\\n"
0 0 19 29 1 #"\n"
0 0 19 3 10 #"          "
0 0 19 3 1 #"-"
0 0 19 3 2 #" ("
0 0 19 3 4 #"quit"
0 0 19 3 1 #" "
0 0 19 3 8 #"| exit |"
0 0 19 3 1 #" "
0 0 19 3 4 #"quit"
0 0 19 3 1 #" "
0 0 19 3 4 #"game"
0 0 19 3 1 #" "
0 0 19 3 1 #"|"
0 0 19 3 1 #" "
0 0 19 3 4 #"exit"
0 0 19 3 1 #" "
0 0 19 3 4 #"game"
0 0 19 3 2 #") "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 4 #"Quit"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 14 #"application.\\n"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 3 21 #"                     "
0 0 19 3 4 #"HAVE"
0 0 19 3 1 #" "
0 0 19 3 6 #"FUN!\\n"
0 0 19 29 1 #"\n"
0 0 19 3 11 #"          \""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";;The following function adds a given object to a database (inventor"
 #"y or object dbs)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 87
(
 #";;The follwing returns true if id is stored in the database, otherwi"
 #"se it return false "
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 132
(
 #";;The following assigns to record the content of the key id inside t"
 #"he db hash table (gets previous items assigned to a room or bag)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 119
(
 #";;The following assigns to the table key (id) the cons between the a"
 #"ctual object and the preexisting objects in the key"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 101
(
 #";;The following assigns the object (consed with '() to become a list"
 #") to a key (id) in the hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;The following function pregame population of rooms with objects"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-objects"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 65
#";; The following adds description (second r) to room id (first r)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 7 #"objects"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;The following function adds the monsters to the database "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-monster"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 7 #"monster"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 87
(
 #";;The follwing returns true if id is stored in the database, otherwi"
 #"se it return false "
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 132
(
 #";;The following assigns to record the content of the key id inside t"
 #"he db hash table (gets previous items assigned to a room or bag)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 119
(
 #";;The following assigns to the table key (id) the cons between the a"
 #"ctual object and the preexisting objects in the key"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"monster"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 101
(
 #";;The following assigns the object (consed with '() to become a list"
 #") to a key (id) in the hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"monster"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;The following function pregame population of rooms with monsters"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-monsters"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 65
#";; The following adds description (second r) to room id (first r)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"add-monster"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 20 #"monsters-in-the-room"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;The following function picks life up from the room, if there is"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-life"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 88
(
 #";;The following returns true if id is stored in the database, otherw"
 #"ise it return false "
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 132
(
 #";;The following assigns to record the content of the key id inside t"
 #"he db hash table (gets previous items assigned to a room or bag)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"record"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 119
(
 #";;The following assigns to the table key (id) the cons between the a"
 #"ctual object and the preexisting objects in the key"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 101
(
 #";;The following assigns the object (consed with '() to become a list"
 #") to a key (id) in the hash table"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;(hash-set! db 'lives (cons life empty))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;The following function pregame population of rooms with lifes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-lives"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 65
#";; The following adds description (second r) to room id (first r)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 2 #"db"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 17 #"lives-in-the-room"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|-------------------|#"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 2 #"#|"
0 0 17 3 5 #"     "
0 0 17 3 4 #"Game"
0 0 17 3 1 #" "
0 0 17 3 4 #"Loop"
0 0 17 3 7 #"     |#"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 23 #"#|-------------------|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";; The following loop is the main game loop. The id refers to the ro"
 #"om in which the player is."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"startgame"
0 0 24 3 1 #" "
0 0 14 3 10 #"initial-id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 10 #"initial-id"
0 0 24 3 3 #") ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 17 #"lives-in-the-room"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 20 #"monsters-in-the-room"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 74
(
 #";;The following shows description on the screen if there is one avai"
 #"lable "
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"get-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 17 #"lives-in-the-room"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 67
#";;The following shows life on the screen if there is one available "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"get-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 20 #"monsters-in-the-room"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 60
#";;The following shows Monsters on the screen if there is one"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"get-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 166
(
 #";; Next one is an else statement. Doesn't show location (because the"
 #"re isn't any description). Just shows the greater than symbol to inc"
 #"ite user to type in text field"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 5 #"\" > \""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 45 #";; The next one reads input from the keyboard"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 104
(
 #";; contained in the srfi/13 library, tokenize the input into substri"
 #"ngs where a space character is found"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"string-tokens"
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-tokenize"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 118
(
 #";; Creates a list of symbols (not strings) of the input. This is nee"
 #"ded to compare the entry with our predefined lists"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"tokens"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-tokens"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 102
(
 #";; Next one decides which action response corresponds to. One of the"
 #" most important calls in the code "
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"response"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"tokens"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 73
(
 #";; (printf \"Input: ~a\\nTokens: ~a\\nResponse: ~a\\n\" input tokens"
 #" response)"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"monster-hit"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 84
(
 #";; If response couldn't be found after the lookup function, shows th"
 #"is error message"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"   "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 7 #"Pardon?"
0 0 19 3 1 #" "
0 0 19 3 29 #"I don't understand that! -\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 13 #";; Add health"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"add"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 28 #";; Add a life to your health"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"add-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 38 #";; Response action is kill the monster"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"kill"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 24 #";; Eliminate the monster"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"weapon"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 57 #";; Response action is look around the room for directions"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"look"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 31 #";; Retrieve possible directions"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"get-directions"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 37 #";; Response action is to pick an item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"pick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 15 #";; Pick up item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"pick-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 37 #";; Response action is to drop an item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"drop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 12 #";; Drop item"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"drop-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 39 #";; Response action is to show inventory"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 24 #";; Display the inventory"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 17 #"display-inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 35 #";; Response action is to show lives"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 20 #";; Display the lives"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"display-lives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 46 #";; Response action is to display the help file"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 35 #";; Displays Help text on the screen"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"display-help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 52 #";; Response action is to display the map of the maze"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"show"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 29 #";; Displays Map on the screen"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"display-show"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 20 #";; Exit game command"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"response"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"quit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 23 #";; Exit the application"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"Hasta la vista, baby!\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"exit"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; The following adds the objects to the database before the game st"
 #"arts"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"add-objects"
0 0 24 3 1 #" "
0 0 14 3 8 #"objectdb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; The following adds the monsters to the database before the game s"
 #"tarts"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"add-monsters"
0 0 24 3 1 #" "
0 0 14 3 9 #"monsterdb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; The following adds \"E\" to bag in the inventory database before "
 #"the game starts"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"add-object"
0 0 24 3 1 #" "
0 0 14 3 11 #"inventorydb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"bag"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";; The following adds 1 f to 'lives (health of the user) in life dat"
 #"abase before the game starts"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"add-life"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 19 3 5 #"\" 1 \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";; The following adds the lifes in the rooms to the life database be"
 #"fore the game starts"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"add-lives"
0 0 24 3 1 #" "
0 0 14 3 6 #"lifedb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Starts the game in the first room"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"startgame"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0           0
